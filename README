Sort Algorithm Test Fest
========================

This little 'framework' allows to perform runtime measurement of spatial sort algorithms in a nice, threaded manner. Results are logged per execution run, per data set type (see below) and per sort algorithm. This should allow for maximum flexibility for post-processing of the results. The provided shell script can be used to generate nice function plots from the results. The following data set types are measured currently:

 - random data
 - sorted data
 - reverse sorted data
 - partially sorted data

These algorithms are currently measured:

 - std::sort (based on quicksort)
 - std::stable_sort (based on merge_sort)
 - heap_sort
 - shell_sort (CP)
 - cook_kim_sort (VS)
 - splay_sort (SL)
 - mel_sort (SS)
 - cook_a_meal_sort (MW)


INSTALLATION
------------

You need to have Boost and CMake installed to build the application as well as Gnuplot to execute the shell script successfully. The code is documented where necessary and should be easy to adopt to your own needs.

Use to following steps to build the application:

 $ mkdir build/
 $ cd build/
 $ cmake ..
 $ make

Or simply run 'satf.sh' or peek inside for more detail.


LICENSE
-------

All sources are licensed under the terms of the GNU General Public License (version 2 or later), except the sources found under 'src/boost' and where noted otherwise. Those have their own respective license and authors.


TODO
----

 - Add memory profiling ((m|re)alloc/free counts, etc.). Needs a proper instrumentation tool or library
